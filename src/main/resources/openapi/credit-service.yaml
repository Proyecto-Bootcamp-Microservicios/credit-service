openapi: 3.0.3
info:
  title: Credit Service API
  version: 1.0.0
  description: API for managing credits (personal and enterprise)

servers:
  - url: http://localhost:8080/api/v1

paths:
  /credits:
    get:
      summary: Get all credits
      operationId: getAllCredits
      parameters:
        - name: customerId
          in: query
          required: false
          schema:
            type: string
          description: Filter credits by customer ID
          example: "68a0cdde7d68c910da0bc239"
        - name: isActive
          in: query
          required: false
          schema:
            type: boolean
          description: Filter credit by active status (default = true)
          example: true
      responses:
        '200':
          description: List of customers credits
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CreditResponse'
    post:
      summary: Create a new credit
      operationId: createCredit
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreditCreateRequest'
      responses:
        '201':
          description: Credit created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditResponse'
        '400':
          description: Bad request - Validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Business rule violation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                personalCreditExists:
                  summary: Personal customer already has a credit
                  value:
                    code: "PERSON_ALREADY_HAS_CREDIT"
                    message: "Personal customers can only have one active credit"
                    timestamp: "2025-08-24T10:15:30Z"
                customerNotFound:
                  summary: Customer not found
                  value:
                    code: "CUSTOMER_NOT_FOUND"
                    message: "Customer with provided ID does not exist"
                    timestamp: "2025-08-24T10:15:30Z"

  /credits/{id}:
    get:
      summary: Get a credit by ID
      operationId: getCreditById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Credit found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditResponse'
        '404':
          description: Credit not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      summary: Update a credit by ID
      operationId: updateCredit
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreditUpdateRequest'
      responses:
        '200':
          description: Credit updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditResponse'
        '404':
          description: Credit not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request - Validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: Delete a credit by ID
      operationId: deleteCredit
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Credit deleted
        '404':
          description: Credit not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /credits/{id}/deactivate:
    patch:
      summary: Soft delete (deactivate) a credit by ID
      description: Marks the credit as inactive without physically removing it
      operationId: deactivateCredit
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Credit deactivated (isActive set to false)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditResponse'
        '404':
          description: Credit not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /credits/{id}/activate:
    patch:
      summary: Reactivate a credit by ID
      description: Marks the credit as active again
      operationId: activateCredit
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Credit activated (isActive set to true)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditResponse'
        '404':
          description: Credit not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /credits/{creditNumber}/process-payment:
    post:
      summary: Process payment validation and update balances
      description: Validates payment and updates credit balances if successful
      operationId: processCreditPayment
      parameters:
        - name: creditNumber
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentProcessRequest'
      responses:
        '200':
          description: Payment processed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentProcessResponse'
        '400':
          description: Payment validation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentProcessResponse'
        '404':
          description: Credit not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /credits/{creditNumber}/balance:
    get:
      summary: Get credit balance information
      operationId: getCreditBalance
      parameters:
        - name: creditNumber
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Credit balance information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditBalanceResponse'
        '404':
          description: Credit not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /credits/eligibility/{customerId}:
    get:
      summary: Check customer eligibility for new credit products
      description: Validates if customer can acquire new credit products based on overdue status
      operationId: checkCustomerEligibility
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: string
          example: "68a0cdde7d68c910da0bc239"
      responses:
        '200':
          description: Customer eligibility status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductEligibilityResponse'
        '404':
          description: Customer not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    CreditCreateRequest:
      type: object
      properties:
        customerId:
          type: string
          example: "68a0cdde7d68c910da0bc239"
        originalAmount:
          type: number
          format: double
          minimum: 5000
          maximum: 100000
          description: "Loan amount (minimum $5000, 12 monthly installments)"
          example: 15000.00
      required:
        - originalAmount

    CreditUpdateRequest:
      type: object
      properties:
        nextPaymentDueDate:
          type: string
          format: date
          example: "2025-10-15"
        isActive:
          type: boolean
          example: true

    PaymentProcessRequest:
      type: object
      required:
        - amount
      properties:
        amount:
          type: number
          format: double
          minimum: 0.01
          description: Payment amount (should match monthly payment)
          example: 500.00

    PaymentProcessResponse:
      type: object
      required:
        - success
        - creditId
        - requestedAmount
        - processedAt
      properties:
        success:
          type: boolean
          description: Whether the payment was successful
          example: true
        creditId:
          type: string
          description: Credit ID
          example: "64f3cbb5f8a1e53d2f7c34e1"
        requestedAmount:
          type: number
          format: double
          description: Requested payment amount
          example: 1250.00
        actualPaymentAmount:
          type: number
          format: double
          description: Actual amount paid (only if success = true)
          example: 1250.00
        remainingBalance:
          type: number
          format: double
          description: Remaining balance after payment (only if success = true)
          example: 13750.00
        paidInstallments:
          type: integer
          description: Number of installments paid so far
          example: 1
        remainingInstallments:
          type: integer
          description: Remaining installments
          example: 11
        nextPaymentDueDate:
          type: string
          format: date
          description: Next payment due date
          example: "2025-11-15"
        errorCode:
          type: string
          enum: [ CREDIT_INACTIVE, INVALID_AMOUNT, INSUFFICIENT_PAYMENT, CREDIT_ALREADY_PAID, OVERDUE_PAYMENT ]
          description: Error code (only if success = false)
          example: "INSUFFICIENT_PAYMENT"
        errorMessage:
          type: string
          description: Error message (only if success = false)
          example: "Payment amount is less than monthly installment"
        processedAt:
          type: string
          format: date-time
          description: Processing timestamp
          example: "2025-08-30T15:30:00Z"

    CreditResponse:
      type: object
      properties:
        id:
          type: string
          example: "64f3cbb5f8a1e53d2f7c34e1"
        creditNumber:
          type: string
          example: "CR-0001"
        customerId:
          type: string
          example: "68a0cdde7d68c910da0bc239"
        type:
          type: string
          enum: [ "PERSONAL", "ENTERPRISE" ]
          example: "PERSONAL"
        originalAmount:
          type: number
          format: double
          description: Original loan amount
          example: 15000.00
        currentBalance:
          type: number
          format: double
          description: Remaining debt
          example: 13750.00
        monthlyPayment:
          type: number
          format: double
          description: Fixed monthly installment
          example: 1250.00
        totalInstallments:
          type: integer
          description: Total number of installments (always 12)
          example: 12
        paidInstallments:
          type: integer
          description: Number of installments already paid
          example: 1
        remainingInstallments:
          type: integer
          description: Remaining installments to pay
          example: 11
        nextPaymentDueDate:
          type: string
          format: date
          description: Next payment due date
          example: "2025-11-15"
        finalDueDate:
          type: string
          format: date
          description: Final payment due date
          example: "2026-10-15"
        isOverdue:
          type: boolean
          description: Whether the credit is overdue
          example: false
        overdueDays:
          type: integer
          description: Number of days overdue (0 if not overdue)
          example: 0
        status:
          type: string
          enum: [ "ACTIVE", "PAID", "OVERDUE", "CANCELLED" ]
          example: "ACTIVE"
        isActive:
          type: boolean
          example: true
        createdAt:
          type: string
          format: date-time
          example: "2025-08-18T10:15:30Z"
        updatedAt:
          type: string
          format: date-time
          example: "2025-08-18T10:15:30Z"

    CreditBalanceResponse:
      type: object
      required:
        - creditId
        - creditNumber
        - originalAmount
        - currentBalance
        - monthlyPayment
        - nextPaymentDueDate
        - paidInstallments
        - remainingInstallments
      properties:
        creditId:
          type: string
          description: Credit ID
          example: "64f3cbb5f8a1e53d2f7c34e1"
        creditNumber:
          type: string
          description: Credit number
          example: "PER-0001"
        originalAmount:
          type: number
          format: double
          description: Original loan amount
          example: 15000.00
        currentBalance:
          type: number
          format: double
          description: Remaining balance to pay
          example: 13750.00
        monthlyPayment:
          type: number
          format: double
          description: Monthly installment amount
          example: 1250.00
        nextPaymentDueDate:
          type: string
          format: date
          description: Next payment due date
          example: "2025-11-15"
        paidInstallments:
          type: integer
          description: Installments already paid
          example: 1
        remainingInstallments:
          type: integer
          description: Installments remaining
          example: 11
        paymentProgress:
          type: number
          format: double
          description: Payment progress percentage
          example: 8.33
        isOverdue:
          type: boolean
          description: Credit overdue status
          example: false
        overdueDays:
          type: integer
          description: Days overdue
          example: 0
        status:
          type: string
          enum: [ "ACTIVE", "PAID", "OVERDUE", "CANCELLED" ]
          example: "ACTIVE"
        isActive:
          type: boolean
          description: Credit active status
          example: true
    ProductEligibilityResponse:
      type: object
      required:
        - customerId
        - isEligible
        - checkedAt
      properties:
        customerId:
          type: string
          description: Customer ID
          example: "68a0cdde7d68c910da0bc239"
        isEligible:
          type: boolean
          description: Whether customer is eligible for new products
          example: true
        reason:
          type: string
          description: Reason if not eligible
          example: "Customer has overdue debt in credit products"
        overdueProducts:
          type: array
          description: List of overdue products (if any)
          items:
            $ref: '#/components/schemas/OverdueProduct'
        checkedAt:
          type: string
          format: date-time
          description: Timestamp when eligibility was checked
          example: "2025-09-20T10:30:00Z"

    OverdueProduct:
        type: object
        required:
          - productId
          - productType
          - overdueDays
        properties:
          productId:
            type: string
            description: Product ID
            example: "64f3cbb5f8a1e53d2f7c34e1"
          productNumber:
            type: string
            description: Product number
            example: "PER-0001"
          productType:
            type: string
            enum: [ "CREDIT", "CREDIT_CARD" ]
            description: Type of overdue product
            example: "CREDIT"
          overdueDays:
            type: integer
            description: Number of days overdue
            example: 15
          overdueAmount:
            type: number
            format: double
            description: Amount overdue
            example: 1250.00
    ErrorResponse:
      type: object
      properties:
        code:
          type: string
          example: "PERSON_ALREADY_HAS_CREDIT"
        message:
          type: string
          example: "Personal customers can only have one active credit"
        timestamp:
          type: string
          format: date-time
          example: "2025-08-24T10:15:30Z"
      required:
        - code
        - message
        - timestamp
